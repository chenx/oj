- split function

  1) split with delimiter char.
  
    void split(string data, vector<string> &vals, char delim) {
        stringstream ss(data);
        string val;
        while (std::getline(ss, val, delim)) {
            vals.push_back(val);
        }
    }

  2) split with blank space.
  
    void split(string data, vector<string> &vals) {
        stringstream ss(data);
        string val;
        while (ss >> val) {
            vals.push_back(val);
        }
    }
    
- convert int to string

  1) A quick way: std::to_string(type val)
  Type can be int, long, double etc. 
  
  See: http://www.cplusplus.com/reference/string/to_string/
  
  2) 
  
    int toInt(string s) {
        stringstream iss(s); // istringstream works too.
        int val;
        iss >> val;
        return val;
    }
    
  3) 
  
    int toInt(string s) {
        int val = 0, i = 0, val0;
        bool neg = s[0] == '-';
        if (neg) ++ i;
        else if (s[0] == '+') ++ i;
        
        for (; i < s.length(); ++ i) {
            val0 = val;
            val = val * 10 + s[i] - '0';
            if (val / 10 != val0) throw overflow_error();
        }
        
        if (neg) val = - val;
        return val;
    }
    
  
- convert string to int/long/long-long:

  std::stoi(string val)
  std::stol(stirng val)
  std::stoll(string val)
  
  See: http://en.cppreference.com/w/cpp/string/basic_string/stol

- Difference of stringstream, istringstream and ostringstream 

  Stringstream is bigger. The other two make code more readable.
  They can be interchangeable. 
  E.g., in the split functions above, replace stringstream with istringstream is ok too.
  
  
